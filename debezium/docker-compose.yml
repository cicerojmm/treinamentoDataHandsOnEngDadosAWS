version: '3.8'



networks:
  debezium_net:

services:
  zookeeper:
    image: debezium/zookeeper:${DEBEZIUM_VERSION}
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - debezium_net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log

  kafka:
    image: debezium/kafka:${DEBEZIUM_VERSION}
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092" # acesso externo
    networks:
      - debezium_net
    environment:
      KAFKA_BROKER_ID: 1
      ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_EXTERNAL://${EC2_IP}:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/var/lib/kafka/data

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    container_name: schema-registry
    ports:
      - "8081:8081"
    networks:
      - debezium_net
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
    depends_on:
      - kafka

  connect:
    image: debezium/connect:${DEBEZIUM_VERSION}
    container_name: connect
    ports:
      - "8083:8083"
    networks:
      - debezium_net
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      REST_ADVERTISED_HOST_NAME: connect
      REST_PORT: 8083
      KAFKA_OPTS: "-XX:+IgnoreUnrecognizedVMOptions -XX:-UseContainerSupport"
    depends_on:
      - kafka
      - schema-registry
    volumes:
      - ./kafka-connect-debezium:/kafka/libs

  connect-confluent:
    image: confluentinc/cp-kafka-connect-base:7.3.0
    container_name: connect-confluent
    depends_on:
      - kafka
      - schema-registry
    ports:
      - 8084:8083
    networks:
      - debezium_net
    volumes:
      - ./kafka-connect-confluent:/usr/share/confluent-hub-components/iceberg-kafka-connect
    environment:
      KAFKA_OPTS: "-XX:+IgnoreUnrecognizedVMOptions -XX:-UseContainerSupport"
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components/iceberg-kafka-connect
      AWS_ACCESS_KEY_ID: <AWS_ACCESS_KEY_ID>
      AWS_SECRET_ACCESS_KEY: <AWS_SECRET_ACCESS_KEY> 
      AWS_REGION: us-east-2
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: kafka-connect
      CONNECT_CONFIG_STORAGE_TOPIC: _kafka-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _kafka-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _kafka-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_LOG4J_LOGGERS: org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: '[%d] %p %X{connector.context}%m
        (%c:%L)%n'
    command:
      - bash
      - -c
      - |
        echo "Installing connector plugins"
        mkdir -p /usr/share/confluent-hub-components/
        confluent-hub install --no-prompt --component-dir /usr/share/confluent-hub-components/ tabular/iceberg-kafka-connect:latest
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run & 
        sleep infinity

  # debezium-ui:
  #   image: debezium/debezium-ui:${DEBEZIUM_VERSION}
  #   container_name: debezium-ui
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - debezium_net
  #   environment:
  #     KAFKA_CONNECT_URIS: http://connect:8083
  #   depends_on:
  #     - connect

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    networks:
      - debezium_net
    ports:
      - 8080:8080
    depends_on:
      - kafka
      - connect
      - connect-confluent
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: connect-confluent
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://connect-confluent:8084
      KAFKA_CLUSTERS_0_KAFKACONNECT_1_NAME: debezium-connect
      KAFKA_CLUSTERS_0_KAFKACONNECT_1_ADDRESS: http://connect:8083
      DYNAMIC_CONFIG_ENABLED: 'true'

volumes:
  zookeeper_data:
  zookeeper_log:
  kafka_data:
  connect_data:
