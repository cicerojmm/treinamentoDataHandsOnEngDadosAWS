name: Terraform CI/CD

on:
  pull_request:
    branches:
      - develop
      - main
  push:
    branches:
      - develop
      - main

env:
  TF_VERSION: "1.9.5"
  TF_WORKING_DIR: terraform/infra
  AWS_REGION: "us-east-2"

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-2

    steps:
      - name: Checkout cÃ³digo
        uses: actions/checkout@v4

      - name: Configurar ENV
        run: |
          if [[ "${{ github.base_ref }}" == "develop" ]] || [[ "${{ github.ref_name }}" == "develop" ]]; then
            echo "ENV=dev" >> $GITHUB_ENV
          elif [[ "${{ github.base_ref }}" == "main" ]] || [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "ENV=prod" >> $GITHUB_ENV
          else
            echo "ENV=dev" >> $GITHUB_ENV
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -backend-config=backends/${{ env.ENV }}.hcl

      - name: Terraform fmt
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform fmt -check

      - name: Terraform validate
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform validate

      - name: Terraform plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -input=false -out=tfplan -var-file=envs/${{ env.ENV }}.tfvars

      - name: Upload plan artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ env.ENV }}
          path: ${{ env.TF_WORKING_DIR }}/tfplan

      - name: Terraform apply
        if: github.event_name == 'push' && (github.ref_name == 'main' || github.ref_name == 'develop')
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -input=false -auto-approve tfplan
